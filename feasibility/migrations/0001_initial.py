# Generated by Django 3.1.1 on 2021-07-15 23:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Questions', '0002_auto_20210715_2303'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseCPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_type', models.CharField(blank=True, choices=[('1', 'GenPop'), ('2', 'B2B')], max_length=2, null=True)),
                ('min_loi', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('max_loi', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('min_incidence', models.IntegerField(default=100, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('max_incidence', models.IntegerField(default=100, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('cpi', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseFeasibilityWeightage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_loi', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('max_loi', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('min_incidence', models.IntegerField(default=100, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('max_incidence', models.IntegerField(default=100, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('feasibilityWeightage', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeasibilityQuestionAnswerMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feasibilityweightage', models.FloatField(blank=True, default=0, null=True)),
                ('feasibilitycpiweightage', models.FloatField(blank=True, default=0, null=True)),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Questions.parentanswer')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Questions.parentquestion')),
            ],
        ),
        migrations.AddConstraint(
            model_name='basefeasibilityweightage',
            constraint=models.UniqueConstraint(fields=('min_loi', 'max_loi', 'min_incidence', 'max_incidence', 'feasibilityWeightage'), name='unique_validation'),
        ),
        migrations.AddConstraint(
            model_name='basecpi',
            constraint=models.UniqueConstraint(fields=('study_type', 'min_loi', 'max_loi', 'min_incidence', 'max_incidence', 'cpi'), name='unique_study_type_cpi_loi_incidence'),
        ),
        migrations.AddConstraint(
            model_name='feasibilityquestionanswermapping',
            constraint=models.UniqueConstraint(fields=('question', 'answer'), name='unique_question_answer'),
        ),
    ]
